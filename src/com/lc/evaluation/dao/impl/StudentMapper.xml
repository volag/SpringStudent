<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lc.evaluation.dao.StudentMapper">
    <resultMap type="Student" id="StudentResult">
		<id property="id" column="id"/>
		<result property="userName" column="user_name"/>
		<result property="password" column="password"/>
		<result property="userType" column="user_type"/>
		<result property="avatarPath" column="avatar_path"/>
		<result property="birthday" column="birthday"/>
		<result property="address" column="address"/>
		<result property="phoneNum" column="phone_num"/>
		<result property="realName" column="real_name"/>
		<result property="sex" column="sex"/>
		<result property="enterTime" column="enter_school_date"/>
		<result property="gradeId" column="grade_id"/>
	</resultMap>
<!-- 	
	<resultMap type="Student" id="StudentMap">
		<result property="id" column="id"/>
		<result property="enterTime" column="enter_school_date"/>
		<result property="gradeId" column="grade_id"/>
	</resultMap> -->

	<select id="findByUserName"  resultMap="StudentResult">
		select * from t_student t1,t_user t2 where t1.id=t2.id and t2.user_name=#{userName}
	</select>
	
	<select id="findPasswordByUserName" resultType="java.lang.String">
		select password from t_user where user_name = #{userName}
	</select>
	
	<select id="findAllCount" resultType="Long">
		select count(*) from t_student
	</select>

	<select id="findById" resultMap="StudentResult">
		select * from t_student t1,t_user t2 where t1.id=t2.id and t1.id=#{id}
	</select>

	<select id="findAll" resultMap="StudentResult">
		select * from t_student t1,t_user t2 where t1.id=t2.id
	</select>

	<insert id="add" parameterType="Student">
		insert into t_student(
		id,enter_school_date,grade_id)
		values(
		#{id},#{enterTime},#{gradeId})
	</insert>

	<insert id="addAll">
		insert into t_student(
		id,enter_school_date,grade_id)
		values
		<foreach collection="list" item="student" separator=",">
			(#{student.id},#{student.enterTime},#{student.gradeId})
		</foreach>
	</insert>

	<delete id="delete">
		delete from t_student
		where id in
		<foreach collection="list" open="(" close=")" separator=","
			item="student" index="i">
			#{student.id}
		</foreach>
	</delete>

	<update id="update" parameterType="Student">
		update t_student
		<set>
			<if test="id != null and id !=''">
				id = #{id},
			</if>
			<if test="enterTime != null and enterTime !=''">
				enter_school_date = #{enterTime},
			</if>
			<if test="gradeId != null and gradeId !=''">
				grade_id = #{gradeId},
			</if>
		
		</set>
		where id = #{id}
	</update>

</mapper> 